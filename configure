#!/bin/sh

# Library versions
LIB_VER="722bf46"
TLS_VER="869298b"

# Initialise
PKG_CFLAGS="-I../install/include"
PKG_LIBS="-lnng -lmbedtls -lmbedx509 -lmbedcrypto"

# Find compiler
CC=`${R_HOME}/bin/R CMD config CC`
CFLAGS=`${R_HOME}/bin/R CMD config CFLAGS`

# Detect cmake
echo "Detecting 'cmake'..."
which cmake
if [ $? -ne 0 ]
then
  export PATH=$PATH:/Applications/CMake.app/Contents/bin
  which cmake
  if [ $? -ne 0 ]
  then
    echo "'cmake' is required but is not found"
    exit 1
  fi
fi

# Detect -latomic linker flag for ARM architectures (Raspberry Pi etc.)
echo "#include <stdint.h>
uint64_t v;
int main() {
    return (int)__atomic_load_n(&v, __ATOMIC_ACQUIRE);
}" | ${CC} -x c - -o /dev/null > /dev/null 2>&1
if [ $? -ne 0 ]
then
  echo "Adding -latomic linker flag ..."
  PKG_LIBS="$PKG_LIBS -latomic"
fi

# Check for mbedtls
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]
then
  echo "Found INCLUDE_DIR and/or LIB_DIR ..."
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"

elif [ -d "/usr/local/include/mbedtls" ]
then
  echo "Found 'libmbedtls' in /usr/local ..."
  PKG_CFLAGS="-I/usr/local/include $PKG_CFLAGS"
  PKG_LIBS="-L/usr/local/lib $PKG_LIBS"

elif [ -d "/usr/include/mbedtls" ]
then
  echo "Found 'libmbedtls' in /usr ..."
  PKG_CFLAGS="-I/usr/include $PKG_CFLAGS"
  PKG_LIBS="-L/usr/lib $PKG_LIBS"

elif [ -d "/usr/local/opt/mbedtls" ]; then
  echo "Found 'libmbedtls' in /usr/local/opt ..."
  PKG_CFLAGS="-I/usr/local/opt/mbedtls/include $PKG_CFLAGS"
  PKG_LIBS="-L/usr/local/opt/mbedtls/lib $PKG_LIBS"

else
  echo "Existing installation of 'libmbedtls' not found"
  echo "Downloading 'libmbedtls' source ..."
  curl -sL https://api.github.com/repos/Mbed-TLS/mbedtls/tarball/$TLS_VER -o mbedtls.tar.gz
  gzip -dc mbedtls.tar.gz | tar -xf -
  rm -f mbedtls.tar.gz
  cd Mbed-TLS-mbedtls-$TLS_VER
  echo "Compiling 'libmbedtls' from source ..."
  cmake -DCMAKE_POSITION_INDEPENDENT_CODE=1 -DCMAKE_BUILD_TYPE=Release \
    -DENABLE_TESTING=0 -DENABLE_PROGRAMS=0 -DCMAKE_COLOR_MAKEFILE=0 \
    -DCMAKE_INSTALL_MESSAGE=NEVER -DCMAKE_INSTALL_PREFIX=../install .
  cmake --build .
  cmake --install .
  cd ..
  rm -rf Mbed-TLS-mbedtls-$TLS_VER

fi

# Build NNG
xz -dc inst/nng-$LIB_VER.tar.xz | tar -xf -
cd nng-$LIB_VER
echo "Compiling 'libnng' from source ..."
cmake -DCMAKE_POSITION_INDEPENDENT_CODE=1 -DCMAKE_COLOR_MAKEFILE=0 \
  -DCMAKE_INSTALL_MESSAGE=NEVER -DCMAKE_INSTALL_PREFIX=../install .
cmake --build .
cmake --install .
cd ..
rm -rf nng-$LIB_VER

if [ -d "install/lib64" ]
then
  PKG_LIBS="-L../install/lib64 $PKG_LIBS"
fi
if [ -d "install/lib" ]
then
  PKG_LIBS="-L../install/lib $PKG_LIBS"
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0

