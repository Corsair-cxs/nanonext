#!/bin/sh

# set -x

PKG_CFLAGS=""
PKG_LIBS="-lnng"
LIB_VER="722bf46"
TLS_SUP=0

# Find compiler
CC=`${R_HOME}/bin/R CMD config CC`
CFLAGS=`${R_HOME}/bin/R CMD config CFLAGS`

# Library settings
if [ "$NANONEXT_TLS" ]
then
  echo "trying with TLS support"
  PKG_LIBS="$PKG_LIBS -lmbedtls -lmbedx509 -lmbedcrypto"
  TLS_SUP=1
elif [ -d "/usr/local/include/mbedtls" ]
then
  echo "found system mbedtls installation... using TLS support"
  PKG_LIBS="$PKG_LIBS -lmbedtls -lmbedx509 -lmbedcrypto"
  TLS_SUP=1
elif [ -d "/usr/include/mbedtls" ]
then
  echo "found system mbedtls installation... using TLS support"
  PKG_LIBS="$PKG_LIBS -lmbedtls -lmbedx509 -lmbedcrypto"
  TLS_SUP=1
elif [ -d "/usr/local/opt/mbedtls" ]
then
  echo "found mbedtls Homebrew installation... using TLS support"
  PKG_LIBS="$PKG_LIBS -lmbedtls -lmbedx509 -lmbedcrypto"
  TLS_SUP=1
fi

# Detect -latomic linker flag for e.g. ARM architectures (Raspberry Pi etc.)
echo "#include <stdint.h>
uint64_t v;
int main() {
    return (int)__atomic_load_n(&v, __ATOMIC_ACQUIRE);
}" | ${CC} -x c - -o /dev/null > /dev/null 2>&1
if [ $? -ne 0 ]
then
  echo "adding -latomic linker flag"
  PKG_LIBS="$PKG_LIBS -latomic"
fi

echo "preparing to download and build libnng from source..."
curl -L https://api.github.com/repos/nanomsg/nng/tarball/$LIB_VER -o nng.tar.gz
gzip -dc nng.tar.gz | tar -xf -
rm -f nng.tar.gz
cd nanomsg-nng-$LIB_VER
mkdir build
cd build
which cmake
if [ $? -ne 0 ]
then
  export PATH=$PATH:/Applications/CMake.app/Contents/bin
fi
if [ "$TLS_SUP" -ne 0 ]
then
  cmake -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fPIC" -DNNG_ENABLE_TLS=1 -DNNG_ELIDE_DEPRECATED=1 -DNNG_TESTS=0 -DNNG_TOOLS=0 ..
else
  cmake -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fPIC" -DNNG_ELIDE_DEPRECATED=1 -DNNG_TESTS=0 -DNNG_TOOLS=0 ..
fi
cmake --build .
cd ../..
mkdir lib
mv -f nanomsg-nng-$LIB_VER/build/libnng.a lib
mv -f nanomsg-nng-$LIB_VER/include ./
rm -rf nanomsg-nng-$LIB_VER
PKG_CFLAGS="-I`pwd`/include $PKG_CFLAGS"
PKG_LIBS="-L`pwd`/lib $PKG_LIBS"

# For debugging
# echo "Using PKG_CFLAGS=$PKG_CFLAGS"
# echo "Using PKG_LIBS=$PKG_LIBS"

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0

