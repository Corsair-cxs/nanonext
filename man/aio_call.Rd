% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aio.R
\name{aio_call}
\alias{aio_call}
\title{Call the Result of an Asynchronous AIO Operation}
\usage{
aio_call(aio)
}
\arguments{
\item{aio}{An Aio (object of class 'sendAio' or 'recvAio').}
}
\value{
The original Aio object (invisibly).
}
\description{
Retrieve the result of an asynchronous AIO operation. Will wait for the AIO
    operation (blocking) if not yet complete. Once the result is retrieved,
    the Aio is deallocated and further actions cannot be performed on it.
}
\details{
For a 'sendAio', the send result will be attached to the Aio in
    \code{$result}. This will be zero on success.

    For a 'recvAio', the received raw vector will be attached in \code{$raw}
    (unless 'keep.raw' was set to FALSE when receiving), and the converted R
    object in \code{$data}.

    For a 'recvAio', in case of an error in unserialisation or data conversion,
    the received raw vector will always be saved in \code{$raw} to allow the
    data to be recovered.
}
\examples{
s1 <- socket("pair", listen = "inproc://nanonext")
s2 <- socket("pair", dial = "inproc://nanonext")

res <- send_aio(s1, data.frame(a = 1, b = 2), timeout = 100)
res
aio_call(res)
res
res$result

res <- recv_aio(s2, timeout = 100)
res
aio_call(res)$data
res

close(s1)
close(s2)

}
