% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aio.R
\name{is_resolved}
\alias{is_resolved}
\title{Is Resolved (Asynchronous AIO Operation)}
\usage{
is_resolved(aio)
}
\arguments{
\item{aio}{An Aio (object of class 'sendAio' or 'recvAio'), or Aio value
stored in \code{$result}, \code{$raw} or \code{$data} as the case may be.}
}
\value{
Logical TRUE or FALSE.
}
\description{
Query whether an Aio or Aio value has resolved. This function is non-blocking
    unlike \code{\link{call_aio}} which waits for completion.
}
\details{
Returns FALSE only for unresolved nanonext Aios or Aio values; returns
    TRUE in all other cases and for all other objects.

    Note: querying resolution may cause a previously unresolved Aio to resolve.
}
\examples{
s1 <- socket("pair", listen = "inproc://nanonext")
aio <- send_aio(s1, "test", timeout = 100)
is_resolved(aio)

s2 <- socket("pair", dial = "inproc://nanonext")
is_resolved(aio)

close(s1)
close(s2)

}
