% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/context.R
\name{send_ctx}
\alias{send_ctx}
\title{Send over Context}
\usage{
send_ctx(context, data, mode = c("serial", "raw"), timeout, echo = TRUE)
}
\arguments{
\item{context}{a Context.}

\item{data}{an object (if mode = 'raw', a vector).}

\item{mode}{whether data will be sent serialized or as a raw vector. Specify
'serial' for sending and receiving objects within R for perfect
reproducibility. Specify 'raw' for sending vectors of any type (converted
to a raw byte vector for sending) - essential when interfacing with
external applications. For Streams, 'raw' is the only choice and any other
value is ignored.}

\item{timeout}{(optional) integer value in milliseconds. If unspecified, a
socket-specific default timeout will be used.}

\item{echo}{[default TRUE] logical flag whether to return the raw vector of
sent data. Set to FALSE for performance-critical applications.}
}
\value{
Raw vector of sent data, or (invisibly) an integer exit code (zero on
    success) if 'echo' is set to FALSE.
}
\description{
Send data over a Context [Deprecated].
}
\details{
Will block if the send is in progress and has not yet completed -
    certain protocol / transport combinations may limit the number of messages
    that can be queued if they have yet to be received. Set a timeout to
    ensure the function returns under all scenarios.
}
\keyword{internal}
